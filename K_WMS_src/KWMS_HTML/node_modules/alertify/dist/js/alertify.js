! function() {"use strict";function t() {var t = {defaultOkLabel: "Ok",okLabel: "确定",defaultCancelLabel: "Cancel",cancelLabel: "取消",defaultMaxLogItems: 2,maxLogItems: 2,promptValue: "",promptPlaceholder: "",closeLogOnClick: !1,closeLogOnClickDefault: !1,delay: 5e3,defaultDelay: 5e3,logContainerClass: "alertify-logs",logContainerDefaultClass: "alertify-logs",dialogs: {buttons: {holder: "<nav>{{buttons}}</nav>",ok: "<button class='ok' tabindex='1'>{{ok}}</button>",cancel: "<button class='cancel' tabindex='2'>{{cancel}}</button>"},input: "<input type='text'>",message: "<p class='msg'>{{message}}</p>",log: "<div class='{{class}}'>{{message}}</div>"},defaultDialogs: {buttons: {holder: "<nav>{{buttons}}</nav>",ok: "<button class='ok' tabindex='1'>{{ok}}</button>",cancel: "<button class='cancel' tabindex='2'>{{cancel}}</button>"},input: "<input type='text'>",message: "<p class='msg'>{{message}}</p>",log: "<div class='{{class}}'>{{message}}</div>"},build: function(t) {var e = this.dialogs.buttons.ok,o = "<div class='dialog'><div>" + this.dialogs.message.replace("{{message}}", t.message);return ("confirm" === t.type || "prompt" === t.type) && (e = this.dialogs.buttons.cancel + this.dialogs.buttons.ok), "prompt" === t.type && (o += this.dialogs.input), o = (o + this.dialogs.buttons.holder + "</div></div>").replace("{{buttons}}", e).replace("{{ok}}", this.okLabel).replace("{{cancel}}", this.cancelLabel)},setCloseLogOnClick: function(t) {this.closeLogOnClick = !!t},close: function(t, e) {this.closeLogOnClick && t.addEventListener("click", function(t) {o(t.srcElement)}), e = e && !isNaN(+e) ? +e : this.delay, 0 > e ? o(t) : e > 0 && setTimeout(function() {o(t)}, e)},dialog: function(t, e, o, n) {return this.setup({type: e,message: t,onOkay: o,onCancel: n})},log: function(t, e, o) {var n = document.querySelectorAll(".alertify-logs > div");if (n) {var i = n.length - this.maxLogItems;if (i >= 0)for (var a = 0, l = i + 1; l > a; a++) this.close(n[a], -1)}this.notify(t, e, o)},setLogPosition: function(t) {this.logContainerClass = "alertify-logs " + t},setupLogContainer: function() {var t = document.querySelector(".alertify-logs"),e = this.logContainerClass;return t || (t = document.createElement("div"), t.className = e, document.body.appendChild(t)), t.className !== e && (t.className = e), t},notify: function(t, e, o) {var n = this.setupLogContainer(),i = document.createElement("div");i.className = e || "default", i.innerHTML = t, "function" == typeof o && i.addEventListener("click", o), n.appendChild(i), setTimeout(function() {i.className += " show"}, 10), this.close(i, this.delay)},setup: function(t) {function e(e) {"function" != typeof e && (e = function() {}), i && i.addEventListener("click", function(i) {t.onOkay && "function" == typeof t.onOkay && (l ? t.onOkay(l.value, i) : t.onOkay(i)), e(l ? {buttonClicked: "ok",inputValue: l.value,event: i} : {buttonClicked: "ok",event: i}), o(n)}), a && a.addEventListener("click", function(i) {t.onCancel && "function" == typeof t.onCancel && t.onCancel(i), e({buttonClicked: "cancel",event: i}), o(n)})}var n = document.createElement("div");n.className = "alertify hide", n.innerHTML = this.build(t);var i = n.querySelector(".ok"),a = n.querySelector(".cancel"),l = n.querySelector("input"),s = n.querySelector("label");l && ("string" == typeof this.promptPlaceholder && (s ? s.textContent = this.promptPlaceholder : l.placeholder = this.promptPlaceholder), "string" == typeof this.promptValue && (l.value = this.promptValue));var r;return "function" == typeof Promise ? r = new Promise(e) : e(), document.body.appendChild(n), setTimeout(function() {n.classList.remove("hide"), l && t.type && "prompt" === t.type ? (l.select(), l.focus()) : i && i.focus()}, 100), r},okBtn: function(t) {return this.okLabel = t, this},setDelay: function(t) {var e = parseInt(t || 0, 10);return this.delay = isNaN(e) ? this.defultDelay : t, this},cancelBtn: function(t) {return this.cancelLabel = t, this},setMaxLogItems: function(t) {this.maxLogItems = parseInt(t || this.defaultMaxLogItems)},theme: function(t) {switch (t.toLowerCase()) {case "bootstrap":this.dialogs.buttons.ok = "<button class='ok btn btn-success' tabindex='1'>{{ok}}</button>", this.dialogs.buttons.cancel = "<button class='cancel btn btn-danger' tabindex='2'>{{cancel}}</button>", this.dialogs.input = "<input type='text' class='form-control'>";break;case "purecss":this.dialogs.buttons.ok = "<button class='ok pure-button' tabindex='1'>{{ok}}</button>", this.dialogs.buttons.cancel = "<button class='cancel pure-button' tabindex='2'>{{cancel}}</button>";break;case "mdl":case "material-design-light":this.dialogs.buttons.ok = "<button class='ok mdl-button mdl-js-button mdl-js-ripple-effect'  tabindex='1'>{{ok}}</button>", this.dialogs.buttons.cancel = "<button class='cancel mdl-button mdl-js-button mdl-js-ripple-effect' tabindex='2'>{{cancel}}</button>", this.dialogs.input = "<div class='mdl-textfield mdl-js-textfield'><input class='mdl-textfield__input'><label class='md-textfield__label'></label></div>";break;case "angular-material":this.dialogs.buttons.ok = "<button class='ok md-primary md-button' tabindex='1'>{{ok}}</button>", this.dialogs.buttons.cancel = "<button class='cancel md-button' tabindex='2'>{{cancel}}</button>", this.dialogs.input = "<div layout='column'><md-input-container md-no-float><input type='text'></md-input-container></div>";break;case "default":default:this.dialogs.buttons.ok = this.defaultDialogs.buttons.ok, this.dialogs.buttons.cancel = this.defaultDialogs.buttons.cancel, this.dialogs.input = this.defaultDialogs.input}},reset: function() {this.theme("default"), this.okBtn(this.defaultOkLabel), this.cancelBtn(this.defaultCancelLabel), this.setMaxLogItems(), this.promptValue = "", this.promptPlaceholder = "", this.delay = this.defaultDelay, this.setCloseLogOnClick(this.closeLogOnClickDefault), this.setLogPosition("bottom left")},injectCSS: function() {},removeCSS: function() {var t = document.querySelector("#alertifyCSS");t && t.parentNode && t.parentNode.removeChild(t)}};return t.injectCSS(), {_$$alertify: t,reset: function() {return t.reset(), this},alert: function(e, o, n) {return t.dialog(e, "alert", o, n) || this},confirm: function(e, o, n) {return t.dialog(e, "confirm", o, n) || this},prompt: function(e, o, n) {return t.dialog(e, "prompt", o, n) || this},log: function(e, o) {return t.log(e, "default", o), this},theme: function(e) {return t.theme(e), this},success: function(e, o) {return t.log(e, "success", o), this},error: function(e, o) {return t.log(e, "error", o), this},cancelBtn: function(e) {return t.cancelBtn(e), this},okBtn: function(e) {return t.okBtn(e), this},delay: function(e) {return t.setDelay(e), this},placeholder: function(e) {return t.promptPlaceholder = e, this},defaultValue: function(e) {return t.promptValue = e, this},maxLogItems: function(e) {return t.setMaxLogItems(e), this},closeLogOnClick: function(e) {return t.setCloseLogOnClick(!!e), this},logPosition: function(e) {return t.setLogPosition(e || ""), this}}}var e = 500,o = function(t) {if (t) {var o = function() {t && t.parentNode && t.parentNode.removeChild(t)};t.classList.remove("show"), t.classList.add("hide"), t.addEventListener("transitionend", o), setTimeout(o, e)}};"undefined" != typeof module && module && module.exports ? module.exports = t : "function" == typeof define && define.amd ? define(function() {return new t}) : window.alertify = new t}();