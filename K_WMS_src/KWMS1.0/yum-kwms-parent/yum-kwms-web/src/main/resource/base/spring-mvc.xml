<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/p"
    xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	   http://www.springframework.org/schema/mvc 
	   http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-4.0.xsd
       http://www.springframework.org/schema/cache 
       http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">
    
    <bean id="SpringContextUtil" class="com.hoperun.emp.common.utils.SpringContextUtil" ></bean>
    
	<util:properties id ="configPath">
		<prop key="path">D:\1 KWMS\trunk\K_WMS_src\KWMS1.0\yum-kwms-parent\yum-kwms-web\src\main\resource\dev\</prop> 
	</util:properties>
	
	
	<bean id="propertyPlaceholderConfigurer"  class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="locations">  
	        <list>  
	            <value>file:#{configPath[path]}jdbc.properties</value>
	            <!-- <value>file:#{configPath[path]}rabbit.properties</value>
	            <value>file:#{configPath[path]}redis.properties</value> -->
<!-- 	            <value>file:#{configPath[path]}activemq.properties</value> -->
	        </list>  
	    </property>
	</bean> 
	
	
	
    <!-- 使用默认的注解映射 --> 
    <mvc:annotation-driven />
    <aop:aspectj-autoproxy/>
     
	<import resource="classpath:spring-database.xml" />
	<!-- <import resource="classpath:spring-redis.xml" /> -->
	<context:component-scan base-package="com.*" />
	<!-- <import resource="classpath:spring-rabbit.xml" /> -->
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<!-- bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"> -->
	<bean id="gsonHttpMessageConverter"  class="org.springframework.http.converter.json.GsonHttpMessageConverter">  
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="gsonHttpMessageConverter" />	<!-- JSON转换器 -->
			</list>
		</property>
	</bean>
	
	<!-- WAP访问拦截器 Begin -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/api/info/**.do"/>
			<bean class="com.rd.yum.kwms.web.interceptor.SessionInterceptor" ></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- WAP访问拦截器 End -->
	
	<!-- 图片验证码生成器配置-->
	<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
		<property name="config">
			<bean class="com.google.code.kaptcha.util.Config">
				<constructor-arg>
					<props>
						<prop key="kaptcha.border">no</prop>
						<prop key="kaptcha.textproducer.char.string">0123456789</prop>
						<prop key="kaptcha.textproducer.char.length">4</prop>
						<prop key="kaptcha.textproducer.font.color">black</prop>
						<prop key="kaptcha.textproducer.font.size">60</prop>
						<prop key="kaptcha.textproducer.font.names">宋体</prop>
						<prop key="kaptcha.textproducer.char.space">5</prop>
						<prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop>
						<prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.DefaultNoise</prop>
						<prop key="kaptcha.noise.color">242,91,91</prop>
						<prop key="kaptcha.background.clear.from">white</prop>
						<prop key="kaptcha.background.clear.to">white</prop>
						<prop key="kaptcha.image.width">180</prop>
						<prop key="kaptcha.image.height">100</prop>
					</props>
				</constructor-arg>
			</bean>
		</property>
	</bean>
    <!-- 视图解析路径配置 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
       <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
       <property name="contentType" value="text/html"/>        
       <property name="prefix" value="/WEB-INF/view/"/>
       <property name="suffix" value=".jsp"/>
    </bean>
    
    <!-- 配置静态资源(JS、CSS、图片等)的访问路径 -->
    <mvc:resources location="/js/" mapping="/js/**"/>
    <mvc:resources location="/app/" mapping="/app/**"/>
    <mvc:resources location="/na/" mapping="/na/**"/>
</beans>
